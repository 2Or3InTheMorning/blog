(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{378:function(t,a,s){t.exports=s.p+"assets/img/fiber-3.bad4b82e.png"},379:function(t,a,s){t.exports=s.p+"assets/img/fiber-1.70c7f947.png"},380:function(t,a,s){t.exports=s.p+"assets/img/fiber-2.f0009644.png"},417:function(t,a,s){"use strict";s.r(a);var e=s(3),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react-fiber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber"}},[t._v("#")]),t._v(" React Fiber")]),t._v(" "),e("blockquote",[e("p",[t._v("Fiber是React16中新的协调引擎。")]),t._v(" "),e("p",[t._v("它的主要目的是使Vitrual DOM可以进行增量式的渲染（来自React官方文档）。")]),t._v(" "),e("p",[t._v("update: 2020-1-3")])]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#react-fiber"}},[t._v("React Fiber")]),e("ul",[e("li",[e("a",{attrs:{href:"#浏览器里的-单处理器调度"}},[t._v("浏览器里的“单处理器调度”")])]),e("li",[e("a",{attrs:{href:"#以前的reconciliation不可中断！（🤔引入fiber的原因）"}},[t._v("以前的Reconciliation不可中断！（🤔引入Fiber的原因）")])]),e("li",[e("a",{attrs:{href:"#什么是fiber"}},[t._v("什么是Fiber")])]),e("li",[e("a",{attrs:{href:"#参考链接"}},[t._v("参考链接")])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"浏览器里的-单处理器调度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器里的-单处理器调度"}},[t._v("#")]),t._v(" 浏览器里的“单处理器调度”")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/skill/computeracy/scheduling-strategy/"}},[t._v("复习单处理器调度策略")])],1),t._v(" "),e("p",[t._v("我们可以"),e("strong",[t._v("把浏览器中JavaScript执行环境（即Renderer进程）当作是一台单处理器")]),t._v("。")]),t._v(" "),e("p",[t._v("打开Chrome-任务管理器，可以发现：\n"),e("img",{attrs:{src:s(378),alt:"alt"}})]),t._v(" "),e("p",[t._v("1、浏览器是"),e("strong",[t._v("多进程")]),t._v("的，且其下各个进程的职责如下：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("主进程（Browser进程）：\n    - 浏览器的界面交互（前进、后退等）\n    - 负责各个页面的管理（创建、销毁其它进程）\n    - 将Renderer进程得到的内存中的Bitmap，绘制到界面上\n    - 静态资源下载\n\n浏览器内核（Renderer进程）：\n    - JS引擎线程：JS解析和执行\n    - GUI渲染线程：布局/绘制\n    - 事件触发线程：事件处理\n\nGPU进程：最多一个，用于3D绘制等\n\n第三方插件进程：每种类型的谷歌浏览器插件对应一个进程，仅当使用了该插件时才创建\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("blockquote",[e("p",[t._v('"Browser进程"和"Renderer进程"之间可以通过 '),e("code",[t._v("RendererHost接口")]),t._v(" 取得联系。")])]),t._v(" "),e("p",[t._v("2、JS引擎是"),e("strong",[t._v("单线程运行")]),t._v("（在Renderer进程下）；")]),t._v(" "),e("p",[t._v("3、JS引擎线程、GUI渲染线程"),e("strong",[t._v("互斥")]),t._v("；")]),t._v(" "),e("p",[t._v("4、如果"),e("strong",[t._v("JS引擎中的某个任务")]),t._v("长期霸占CPU，浏览器会出现卡死状态。")]),t._v(" "),e("h3",{attrs:{id:"对于前端框架，-解决卡死-有三种思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对于前端框架，-解决卡死-有三种思路"}},[t._v("#")]),t._v(" 对于前端框架，“解决卡死”有三种思路:")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("优化JS引擎中的每个任务。")])]),t._v(" "),e("blockquote",[e("p",[t._v("Vue使用的是这种。因为响应式机制可以让Vue更精确地进行节点更新。")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("快速响应用户，不阻塞用户的交互")])]),t._v(" "),e("blockquote",[e("p",[t._v("React使用的是这种，所以引入了Fiber架构。")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("尝试Worker多线程")])]),t._v(" "),e("blockquote",[e("p",[t._v('保证状态和视图的一致性很麻烦。Worker相当于JS引擎向浏览器申请开一个worker线程。"JS引擎线程"和"worker线程"之间通过特定方式通信（但worker线程完全受控于主线程，而且不能操作DOM，JS引擎依然是单线程的）。')])])])]),t._v(" "),e("h2",{attrs:{id:"以前的reconciliation不可中断！（🤔引入fiber的原因）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以前的reconciliation不可中断！（🤔引入fiber的原因）"}},[t._v("#")]),t._v(" 以前的Reconciliation不可中断！（🤔引入Fiber的原因）")]),t._v(" "),e("p",[e("strong",[t._v("通过比较新、旧Virtual DOM树来找出变动了的节点，然后同步更新它们，这个过程称为Reconciliation（协调）")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("Reconciliation是CPU密集型操作，相当于“长进程”。")]),t._v(" "),e("p",[t._v("类比“进程调度”，我们应该让高优先级的进程（或者短进程）先运行，不能让长进程长期霸占资源。")])]),t._v(" "),e("h3",{attrs:{id:"引入fiber前"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入fiber前"}},[t._v("#")]),t._v(" 引入Fiber前")]),t._v(" "),e("p",[t._v("因为"),e("strong",[t._v("Reconciliation不可中断")]),t._v("，所以React会霸占着"),e("strong",[t._v("JS引擎线程")]),t._v("，很可能会导致用户"),e("strong",[t._v("得不到响应")]),t._v("或"),e("strong",[t._v("卡顿")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("原因：JS引擎线程、GUI渲染线程"),e("strong",[t._v("互斥")]),t._v("。")])]),t._v(" "),e("h3",{attrs:{id:"引入fiber后"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入fiber后"}},[t._v("#")]),t._v(" 引入Fiber后")]),t._v(" "),e("p",[e("strong",[t._v("Fiber是React 16中新的协调引擎")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("它可以"),e("strong",[t._v("使Reconciliation过程变成可中断")]),t._v("，“适时”地让出CPU执行权。")])]),t._v(" "),e("p",[t._v("好处：")]),t._v(" "),e("ul",[e("li",[t._v("让浏览器及时响应交互")]),t._v(" "),e("li",[t._v("分批延时对DOM进行操作")]),t._v(" "),e("li",[t._v("使浏览器会对代码进行编译优化（JIT）及进行热代码优化，或者对reflow进行修正（？）")])]),t._v(" "),e("p",[t._v("那它是如何使Reconciliation变得可中断的呢？")]),t._v(" "),e("h2",{attrs:{id:"什么是fiber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是fiber"}},[t._v("#")]),t._v(" 什么是Fiber")]),t._v(" "),e("p",[t._v("Fiber的思想："),e("strong",[t._v("可以中断React的渲染过程。中断后React会主动将控制权交回浏览器，让位给高优先级的任务，等到浏览器空闲后再恢复渲染。")])]),t._v(" "),e("h3",{attrs:{id:"让出控制权有哪些需要注意的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#让出控制权有哪些需要注意的？"}},[t._v("#")]),t._v(" 让出控制权有哪些需要注意的？")]),t._v(" "),e("p",[t._v("2个关键点：")]),t._v(" "),e("ul",[e("li",[t._v("如何"),e("strong",[t._v("主动归还控制权")]),t._v("？😆")]),t._v(" "),e("li",[e("strong",[t._v("什么时候")]),t._v("归还？⏰")])]),t._v(" "),e("h4",{attrs:{id:"_1、主动归还控制权"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、主动归还控制权"}},[t._v("#")]),t._v(" 1、主动归还控制权")]),t._v(" "),e("p",[t._v("因为浏览器没有抢占机制，所以要采用"),e("strong",[t._v("合作式调度（Cooperative Scheduling）机制")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("与“合作式调度”相反的是“抢占式调度”（Preemptive Scheduling）")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(379),alt:"alt"}})]),t._v(" "),e("p",[e("strong",[t._v("合作式调度机制")]),t._v("的大致思想：")]),t._v(" "),e("p",[e("strong",[t._v("React向浏览器申请一个“有期限的执行权”；（申请时间片）")])]),t._v(" "),e("p",[t._v("➡️ "),e("strong",[t._v("浏览器在每帧内执行完任务（一般是“绘制”）后就会执行回调，告诉React能借多长时间；")])]),t._v(" "),e("p",[t._v("➡️ "),e("strong",[t._v("借完后React要按照约定，“主动”归还控制权给浏览器")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("当然超时不还，浏览器也是没办法的🤷‍♂️。全凭自律，互相信任。")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("div",{staticClass:"highlight-lines"},[e("br"),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("div",{staticClass:"highlighted"},[t._v(" ")]),e("br")]),e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("因为浏览器（严格说是Renderer进程）在一帧内可能会执行下列任务（执行顺序基本固定）：\n - 处理用户输入事件（事件触发线程）\n - JS执行（JS引擎线程）\n - requestAnimation调用\n - 布局Layout（GUI渲染线程）\n - 绘制Paint（GUI渲染线程）\n")])]),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("在每一帧内，如果浏览器在执行完上面的任务后还有剩余时间，就会执行"),e("code",[t._v("requestIdleCallback")]),t._v("中传入的回调，并传入“能借给React的时间长度”：")]),t._v(" "),e("p",[e("img",{attrs:{src:s(380),alt:"alt"}})]),t._v(" "),e("p",[e("code",[t._v("requestIdleCallback")]),t._v("API：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestIdleCallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器在空闲时，会执行这个回调，同时会给回调传入一个dealine对象")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在dealine对象中包含着浏览器目前有多少时间供我们执行")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("callback")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dealine"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" IdleDeadline")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为了避免浏览器因繁忙且无剩余时间导致的饿死，可传入一个超时时间来强制让浏览器执行回调。")]),t._v("\n    option"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("code",[t._v("IdleDeadline")]),t._v("接口：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdleDealine")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    didTimeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 表示任务执行是否超过约定时间")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeRemaining")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" DOMHighResTimeStamp "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任务可供执行的剩余时间")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("blockquote",[e("p",[t._v("目前"),e("code",[t._v("requestIdCallback")]),t._v("只有Chrome支持。React自己实现了一个（利用"),e("code",[t._v("MessageChannel")]),t._v("将回调延迟到“绘制Paint”之后执行）"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/scheduler/src/forks/SchedulerHostConfig.default.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看源码"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("另外，在理想情况下，每个时间片应该划分为16ms，因为人类能感知到最低限度的频率是每秒60帧（1000ms / 60 = 16 ms）。")])]),t._v(" "),e("h4",{attrs:{id:"_2、什么时候归还？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、什么时候归还？"}},[t._v("#")]),t._v(" 2、什么时候归还？")]),t._v(" "),e("p",[t._v("因为在浏览器中没办法判断后面是否有更高优先级的任务，所以要通过"),e("strong",[t._v("超时检查的机制")]),t._v("来判断是否要归还控制权。")]),t._v(" "),e("p",[e("strong",[t._v("超时检查的机制")]),t._v("的大致思想：")]),t._v(" "),e("p",[e("strong",[t._v("给React一个时间范围（在requestIdleCallback中的回调传入的时间范围timeRemaining）")])]),t._v(" "),e("p",[t._v("➡️ "),e("strong",[t._v("React在每执行完一个小任务后检查是否超时；")])]),t._v(" "),e("p",[t._v("➡️ "),e("strong",[t._v("若超时就停止执行，将控制权归还给浏览器。")])]),t._v(" "),e("h2",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://juejin.im/post/5a6547d0f265da3e283a1df7",target:"_blank",rel:"noopener noreferrer"}},[t._v("从浏览器多进程到JS单线程，JS运行机制最全面的一次梳理"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/faq-internals.html#what-is-react-fiber",target:"_blank",rel:"noopener noreferrer"}},[t._v("Virtual DOM 及内核"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.im/post/5dadc6045188255a270a0f85#heading-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("这可能是最通俗的 React Fiber(时间分片) 打开方式"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);